image: maven:3.8.3-adoptopenjdk-11
services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  MAVEN_CLI_OPTS: "-s ci_settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"


cache:
  paths:
    - .m2/repository/
    - target/

stages:
  - build
  - quality
  - package
  - deploy

compile:
  stage: build
  script: 
    - mvn $MAVEN_CLI_OPTS compile
  artifacts:
    paths:
      - target/*.jar

unit-test:
  stage: quality
  script: 
    - mvn $MAVEN_CLI_OPTS test
  artifacts:
    paths:
      - target/*.jar

integration-test:
  stage: quality
  script: 
    - mvn $MAVEN_CLI_OPTS integration-test
  artifacts:
    paths:
      - target/*.jar

sonarcloud-check:
  image: maven:3-openjdk-17
  stage: quality
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - mvn verify sonar:sonar -Dsonar.qualitygate.wait=true -DskipTests
  only:
    - merge_requests
    - master

maven:
  stage: package
  script:
    - mvn $MAVEN_CLI_OPTS deploy

docker:
  image: docker
  stage: package
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t registry.gitlab.com/pedrohenriquehgr/customer-clean-architecture-app .
    - docker push registry.gitlab.com/pedrohenriquehgr/customer-clean-architecture-app

deploy-dev:
  stage: deploy
  script: 
    - echo 'WIP - Deploy to Development environment...'

deploy-qa:
  stage: deploy
  script: 
    - echo 'WIP - Deploy to QA environment...'

deploy-prd:
  stage: deploy
  script: 
    - echo 'WIP - Deploy to Production environment...'